{"version":3,"file":"NgGrid.js","sourceRoot":"","sources":["../../src/directives/NgGrid.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, ElementRef, Renderer, EventEmitter, ComponentFactoryResolver, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\r\nimport { NgGridConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions } from '../interfaces/INgGrid';\r\nimport { NgGridItem } from './NgGridItem';\r\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\r\n\r\n\r\nexport class NgGrid implements OnInit, DoCheck, OnDestroy {\r\n\t//\tEvent Emitters\r\n\t public onDragStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onDrag: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onDragStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onResizeStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onResize: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onResizeStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t public onItemChange: EventEmitter<Array<NgGridItemEvent>> = new EventEmitter<Array<NgGridItemEvent>>();\r\n\r\n\t//\tPublic variables\r\n\tpublic colWidth: number = 250;\r\n\tpublic rowHeight: number = 250;\r\n\tpublic minCols: number = 1;\r\n\tpublic minRows: number = 1;\r\n\tpublic marginTop: number = 10;\r\n\tpublic marginRight: number = 10;\r\n\tpublic marginBottom: number = 10;\r\n\tpublic marginLeft: number = 10;\r\n\tpublic isDragging: boolean = false;\r\n\tpublic isResizing: boolean = false;\r\n\tpublic autoStyle: boolean = true;\r\n\tpublic resizeEnable: boolean = true;\r\n\tpublic dragEnable: boolean = true;\r\n\tpublic cascade: string = 'up';\r\n\tpublic minWidth: number = 100;\r\n\tpublic minHeight: number = 100;\r\n\r\n\t//\tPrivate variables\r\n\tprivate _items: Array<NgGridItem> = [];\r\n\tprivate _draggingItem: NgGridItem = null;\r\n\tprivate _resizingItem: NgGridItem = null;\r\n\tprivate _resizeDirection: string = null;\r\n\tprivate _itemGrid: { [key: number]: { [key: number]: NgGridItem } } = {};//{ 1: { 1: null } };\r\n\tprivate _containerWidth: number;\r\n\tprivate _containerHeight: number;\r\n\tprivate _maxCols: number = 0;\r\n\tprivate _maxRows: number = 0;\r\n\tprivate _visibleCols: number = 0;\r\n\tprivate _visibleRows: number = 0;\r\n\tprivate _setWidth: number = 250;\r\n\tprivate _setHeight: number = 250;\r\n\tprivate _posOffset: NgGridRawPosition = null;\r\n\tprivate _adding: boolean = false;\r\n\tprivate _placeholderRef: ComponentRef<NgGridPlaceholder> = null;\r\n\tprivate _fixToGrid: boolean = false;\r\n\tprivate _autoResize: boolean = false;\r\n\tprivate _differ: KeyValueDiffer;\r\n\tprivate _destroyed: boolean = false;\r\n\tprivate _maintainRatio: boolean = false;\r\n\tprivate _aspectRatio: number;\r\n\tprivate _preferNew: boolean = false;\r\n\tprivate _zoomOnDrag: boolean = false;\r\n\tprivate _limitToScreen: boolean = false;\r\n\tprivate _curMaxRow: number = 0;\r\n\tprivate _curMaxCol: number = 0;\r\n\tprivate _dragReady: boolean = false;\r\n\tprivate _resizeReady: boolean = false;\r\n\r\n\t//\tDefault config\r\n\tprivate static CONST_DEFAULT_CONFIG: NgGridConfig = {\r\n\t\tmargins: [10],\r\n\t\tdraggable: true,\r\n\t\tresizable: true,\r\n\t\tmax_cols: 0,\r\n\t\tmax_rows: 0,\r\n\t\tvisible_cols: 0,\r\n\t\tvisible_rows: 0,\r\n\t\tcol_width: 250,\r\n\t\trow_height: 250,\r\n\t\tcascade: 'up',\r\n\t\tmin_width: 100,\r\n\t\tmin_height: 100,\r\n\t\tfix_to_grid: false,\r\n\t\tauto_style: true,\r\n\t\tauto_resize: false,\r\n\t\tmaintain_ratio: false,\r\n\t\tprefer_new: false,\r\n\t\tzoom_on_drag: false\r\n\t};\r\n\tprivate _config = NgGrid.CONST_DEFAULT_CONFIG;\r\n\r\n\t//\t[ng-grid] attribute handler\r\n\tset config(v: NgGridConfig) {\r\n\t\tthis.setConfig(v);\r\n\r\n\t\tif (this._differ == null && v != null) {\r\n\t\t\tthis._differ = this._differs.find(this._config).create(null);\r\n\t\t}\r\n\t}\r\n\r\n\t//\tConstructor\r\n\tconstructor(private _differs: KeyValueDiffers,\r\n\t\t\t\tprivate _ngEl: ElementRef,\r\n\t\t\t\tprivate _renderer: Renderer,\r\n\t\t\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\t\t\tprivate _containerRef: ViewContainerRef) {}\r\n\r\n\t//\tPublic methods\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.setElementClass(this._ngEl.nativeElement, 'grid', true);\r\n\t\tif (this.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'relative');\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroyed = true;\r\n\t}\r\n\r\n\tpublic setConfig(config: NgGridConfig): void {\r\n\t\tthis._config = config;\r\n\r\n\t\tvar maxColRowChanged = false;\r\n\t\tfor (var x in config) {\r\n\t\t\tvar val = config[x];\r\n\t\t\tvar intVal = !val ? 0 : parseInt(val);\r\n\r\n\t\t\tswitch (x) {\r\n\t\t\t\tcase 'margins':\r\n\t\t\t\t\tthis.setMargins(val);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'col_width':\r\n\t\t\t\t\tthis.colWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'row_height':\r\n\t\t\t\t\tthis.rowHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'auto_style':\r\n\t\t\t\t\tthis.autoStyle = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'auto_resize':\r\n\t\t\t\t\tthis._autoResize = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'draggable':\r\n\t\t\t\t\tthis.dragEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'resizable':\r\n\t\t\t\t\tthis.resizeEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'max_rows':\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxRows != intVal;\r\n\t\t\t\t\tthis._maxRows = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'max_cols':\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxCols != intVal;\r\n\t\t\t\t\tthis._maxCols = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'visible_rows':\r\n\t\t\t\t\tthis._visibleRows = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'visible_cols':\r\n\t\t\t\t\tthis._visibleCols = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_rows':\r\n\t\t\t\t\tthis.minRows = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_cols':\r\n\t\t\t\t\tthis.minCols = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_height':\r\n\t\t\t\t\tthis.minHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_width':\r\n\t\t\t\t\tthis.minWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'zoom_on_drag':\r\n\t\t\t\t\tthis._zoomOnDrag = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cascade':\r\n\t\t\t\t\tif (this.cascade != val) {\r\n\t\t\t\t\t\tthis.cascade = val;\r\n\t\t\t\t\t\tthis._cascadeGrid();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fix_to_grid':\r\n\t\t\t\t\tthis._fixToGrid = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'maintain_ratio':\r\n\t\t\t\t\tthis._maintainRatio = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'prefer_new':\r\n\t\t\t\t\tthis._preferNew = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'limit_to_screen':\r\n\t\t\t\t\tthis._limitToScreen = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._maintainRatio) {\r\n\t\t\tif (this.colWidth && this.rowHeight) {\r\n\t\t\t\tthis._aspectRatio = this.colWidth / this.rowHeight;\r\n\t\t\t} else {\r\n\t\t\t\tthis._maintainRatio = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (maxColRowChanged) {\r\n\t\t\tif (this._maxCols > 0 && this._maxRows > 0) {\t//\tCan't have both, prioritise on cascade\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\tthis._maxCols = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'up':\r\n\t\t\t\t\tcase 'down':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._maxRows = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let item of this._items) {\r\n\t\t\t\tvar pos = item.getGridPosition();\r\n\t\t\t\tvar dims = item.getSize();\r\n\r\n\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\tif (this._maxCols > 0 && dims.x > this._maxCols) {\r\n\t\t\t\t\tdims.x = this._maxCols;\r\n\t\t\t\t\titem.setSize(dims);\r\n\t\t\t\t} else if (this._maxRows > 0 && dims.y > this._maxRows) {\r\n\t\t\t\t\tdims.y = this._maxRows;\r\n\t\t\t\t\titem.setSize(dims);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims)) {\r\n\t\t\t\t\tvar newPosition = this._fixGridPosition(pos, dims);\r\n\t\t\t\t\titem.setGridPosition(newPosition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._addToGrid(item);\r\n\t\t\t}\r\n\r\n\t\t\tthis._cascadeGrid();\r\n\t\t}\r\n\r\n\t\tthis._calculateRowHeight();\r\n\t\tthis._calculateColWidth();\r\n\r\n\t\tvar maxWidth = this._maxCols * this.colWidth;\r\n\t\tvar maxHeight = this._maxRows * this.rowHeight;\r\n\r\n\t\tif (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\r\n\t\tif (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\r\n\r\n\t\tif (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\tif (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\r\n\r\n\t\tif (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\r\n\t\tif (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tfor (let item of this._items) {\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t\titem.setCascadeMode(this.cascade);\r\n\t\t}\r\n\r\n\t\tthis._updateLimit();\r\n\r\n\t\tfor (let item of this._items) {\r\n\t\t\titem.recalculateSelf();\r\n\t\t\tthis._addToGrid(item);\r\n\t\t}\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic getItemPosition(index: number): NgGridItemPosition {\r\n\t\treturn this._items[index].getGridPosition();\r\n\t}\r\n\r\n\tpublic getItemSize(index: number): NgGridItemSize {\r\n\t\treturn this._items[index].getSize();\r\n\t}\r\n\r\n\tpublic ngDoCheck(): boolean {\r\n\t\tif (this._differ != null) {\r\n\t\t\tvar changes = this._differ.diff(this._config);\r\n\r\n\t\t\tif (changes != null) {\r\n\t\t\t\tthis._applyChanges(changes);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic setMargins(margins: Array<string>): void {\r\n\t\tthis.marginTop = Math.max(parseInt(margins[0]), 0);\r\n\t\tthis.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1]), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2]), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2]), 0) : this.marginTop;\r\n\t\tthis.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3]), 0) : this.marginRight;\r\n\t}\r\n\r\n\tpublic enableDrag(): void {\r\n\t\tthis.dragEnable = true;\r\n\t}\r\n\r\n\tpublic disableDrag(): void {\r\n\t\tthis.dragEnable = false;\r\n\t}\r\n\r\n\tpublic enableResize(): void {\r\n\t\tthis.resizeEnable = true;\r\n\t}\r\n\r\n\tpublic disableResize(): void {\r\n\t\tthis.resizeEnable = false;\r\n\t}\r\n\r\n\tpublic addItem(ngItem: NgGridItem): void {\r\n\t\tngItem.setCascadeMode(this.cascade);\r\n\t\tif (!this._preferNew) {\r\n\t\t\tvar newPos = this._fixGridPosition(ngItem.getGridPosition(), ngItem.getSize());\r\n\t\t\tngItem.savePosition(newPos);\r\n\t\t}\r\n\t\tthis._items.push(ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\t\tngItem.recalculateSelf();\r\n\t\tngItem.onCascadeEvent();\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tpublic removeItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\r\n\t\tfor (let x: number = 0; x < this._items.length; x++) {\r\n\t\t\tif (this._items[x] == ngItem) {\r\n\t\t\t\tthis._items.splice(x, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._destroyed) return;\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t\tthis._items.forEach((item: NgGridItem) => item.recalculateSelf());\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tpublic updateItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t\tngItem.onCascadeEvent();\r\n\t}\r\n\r\n\tpublic triggerCascade(): void {\r\n\t\tthis._cascadeGrid(null, null, false);\r\n\t}\r\n\r\n\tpublic resizeEventHandler(e: any): void {\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tfor (let item of this._items) {\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t}\r\n\r\n\t\tthis._updateLimit();\r\n\r\n\t\tfor (let item of this._items) {\r\n\t\t\tthis._addToGrid(item);\r\n\t\t\titem.recalculateSelf();\r\n\t\t}\r\n\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic mouseDownEventHandler(e: MouseEvent): boolean {\r\n\t\tvar mousePos = this._getMousePosition(e);\r\n\t\tvar item = this._getItemFromPosition(mousePos);\r\n\r\n\t\tif (item != null) {\r\n\t\t\tif (this.resizeEnable && item.canResize(e)) {\r\n\t\t\t\tthis._resizeReady = true;\r\n\t\t\t} else if (this.dragEnable && item.canDrag(e)) {\r\n\t\t\t\tthis._dragReady = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic mouseUpEventHandler(e: any): boolean {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._dragStop(e);\r\n\t\t\treturn false;\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resizeStop(e);\r\n\t\t\treturn false;\r\n\t\t} else if (this._dragReady || this._resizeReady) {\r\n\t\t\tthis._dragReady = false;\r\n\t\t\tthis._resizeReady = false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic mouseMoveEventHandler(e: any): boolean {\r\n\t\tif (this._resizeReady) {\r\n\t\t\tthis._resizeStart(e);\r\n\t\t\treturn false;\r\n\t\t} else if (this._dragReady) {\r\n\t\t\tthis._dragStart(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._drag(e);\r\n\t\t\treturn false;\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resize(e);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tvar mousePos = this._getMousePosition(e);\r\n\t\t\tvar item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.onMouseMove(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t//\tPrivate methods\r\n\tprivate _calculateColWidth(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxCols > 0 || this._visibleCols > 0) {\r\n\t\t\t\tvar maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\r\n\t\t\t\tvar maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\r\n\t\t\t\tvar colWidth: number = Math.floor(maxWidth / maxCols);\r\n\t\t\t\tcolWidth -= (this.marginLeft + this.marginRight);\r\n\t\t\t\tif (colWidth > 0) this.colWidth = colWidth;\r\n\r\n\t\t\t\tif (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\r\n\t\t\t\t\tthis.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateRowHeight(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxRows > 0 || this._visibleRows > 0) {\r\n\t\t\t\tvar maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\r\n\t\t\t\tvar maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\r\n\r\n\t\t\t\tvar rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\r\n\t\t\t\trowHeight -= (this.marginTop + this.marginBottom);\r\n\t\t\t\tif (rowHeight > 0) this.rowHeight = rowHeight;\r\n\r\n\t\t\t\tif (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\r\n\t\t\t\t\tthis.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateRatio(): void {\r\n\t\tif (this._autoResize && this._maintainRatio) {\r\n\t\t\tif (this._maxCols > 0 && this._visibleRows <= 0) {\r\n\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t} else if (this._maxRows > 0 && this._visibleCols <= 0) {\r\n\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t} else if (this._maxCols == 0 && this._maxRows == 0) {\r\n\t\t\t\tif (this._visibleCols > 0) {\r\n\t\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t\t} else if (this._visibleRows > 0) {\r\n\t\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimit(): void {\r\n\t\tif (!this._autoResize && this._limitToScreen) {\r\n\t\t\tthis._limitGrid(this._getContainerColumns());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _applyChanges(changes: any): void {\r\n\t\tchanges.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\r\n\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tprivate _resizeStart(e: any): void {\r\n\t\tif (this.resizeEnable) {\r\n            var mousePos = this._getMousePosition(e);\r\n            var item = this._getItemFromPosition(mousePos);\r\n\r\n            if (item) {\r\n                item.startMoving();\r\n                this._resizingItem = item;\r\n                this._resizeDirection = item.canResize(e);\r\n                this._removeFromGrid(item);\r\n                this._createPlaceholder(item);\r\n                this.isResizing = true;\r\n                this._resizeReady = false;\r\n                this.onResizeStart.emit(item);\r\n                item.onResizeStartEvent();\r\n            }\r\n        }\r\n\t}\r\n\r\n\tprivate _dragStart(e: any): void {\r\n\t\tif (this.dragEnable) {\r\n\t\t\tvar mousePos = this._getMousePosition(e);\r\n\t\t\tvar item = this._getItemFromPosition(mousePos);\r\n\t\t\tvar itemPos = item.getPosition();\r\n\t\t\tvar pOffset = { 'left': (mousePos.left - itemPos.left), 'top': (mousePos.top - itemPos.top) }\r\n\r\n\t\t\titem.startMoving();\r\n\t\t\tthis._draggingItem = item;\r\n\t\t\tthis._posOffset = pOffset;\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t\tthis._createPlaceholder(item);\r\n\t\t\tthis.isDragging = true;\r\n\t\t\tthis._dragReady = false;\r\n\r\n\t\t\tthis.onDragStart.emit(item);\r\n\t\t\titem.onDragStartEvent();\r\n\r\n\t\t\tif (this._zoomOnDrag) {\r\n\t\t\t\tthis._zoomOut();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _zoomOut(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'scale(0.5, 0.5)');\r\n\t}\r\n\r\n\tprivate _resetZoom(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', '');\r\n\t}\r\n\r\n\tprivate _drag(e: any): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\t\twindow.getSelection().empty();\r\n\t\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} else if ((<any>document).selection) {\r\n\t\t\t\t(<any>document).selection.empty();\r\n\t\t\t}\r\n\r\n\t\t\tvar mousePos = this._getMousePosition(e);\r\n\t\t\tvar newL = (mousePos.left - this._posOffset.left);\r\n\t\t\tvar newT = (mousePos.top - this._posOffset.top);\r\n\r\n\t\t\tvar itemPos = this._draggingItem.getGridPosition();\r\n\t\t\tvar gridPos = this._calculateGridPosition(newL, newT);\r\n\t\t\tvar dims = this._draggingItem.getSize();\r\n\r\n\t\t\tif (!this._isWithinBoundsX(gridPos, dims))\r\n\t\t\t\tgridPos.col = this._maxCols - (dims.x - 1);\r\n\r\n\t\t\tif (!this._isWithinBoundsY(gridPos, dims))\r\n\t\t\t\tgridPos.row = this._maxRows - (dims.y - 1);\r\n\r\n\t\t\tif (!this._autoResize && this._limitToScreen) {\r\n\t\t\t\tif ((gridPos.col + dims.x - 1) > this._getContainerColumns()) {\r\n\t\t\t\t\tgridPos.col = this._getContainerColumns() - (dims.x - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gridPos.col != itemPos.col || gridPos.row != itemPos.row) {\r\n\t\t\t\tthis._draggingItem.setGridPosition(gridPos, this._fixToGrid);\r\n\t\t\t\tthis._placeholderRef.instance.setGridPosition(gridPos);\r\n\r\n\t\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\t\tthis._fixGridCollisions(gridPos, dims, true);\r\n\t\t\t\t\tthis._cascadeGrid(gridPos, dims);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this._fixToGrid) {\r\n\t\t\t\tthis._draggingItem.setPosition(newL, newT);\r\n\t\t\t}\r\n\r\n\t\t\tthis.onDrag.emit(this._draggingItem);\r\n\t\t\tthis._draggingItem.onDragEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resize(e: any): void {\r\n\t\tif (this.isResizing) {\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\t\twindow.getSelection().empty();\r\n\t\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} else if ((<any>document).selection) {\r\n\t\t\t\t(<any>document).selection.empty();\r\n\t\t\t}\r\n\r\n\t\t\tvar mousePos = this._getMousePosition(e);\r\n\t\t\tvar itemPos = this._resizingItem.getPosition();\r\n\t\t\tvar itemDims = this._resizingItem.getDimensions();\r\n\t\t\tvar newW = this._resizeDirection == 'height' ? itemDims.width : (mousePos.left - itemPos.left + 10);\r\n\t\t\tvar newH = this._resizeDirection == 'width' ? itemDims.height : (mousePos.top - itemPos.top + 10);\r\n\r\n\t\t\tif (newW < this.minWidth)\r\n\t\t\t\tnewW = this.minWidth;\r\n\t\t\tif (newH < this.minHeight)\r\n\t\t\t\tnewH = this.minHeight;\r\n\t\t\tif (newW < this._resizingItem.minWidth)\r\n\t\t\t\tnewW = this._resizingItem.minWidth;\r\n\t\t\tif (newH < this._resizingItem.minHeight)\r\n\t\t\t\tnewH = this._resizingItem.minHeight;\r\n\r\n\t\t\tvar calcSize = this._calculateGridSize(newW, newH);\r\n\t\t\tvar itemSize = this._resizingItem.getSize();\r\n\t\t\tvar iGridPos = this._resizingItem.getGridPosition();\r\n\r\n\t\t\tif (!this._isWithinBoundsX(iGridPos, calcSize))\r\n\t\t\t\tcalcSize.x = (this._maxCols - iGridPos.col) + 1;\r\n\r\n\t\t\tif (!this._isWithinBoundsY(iGridPos, calcSize))\r\n\t\t\t\tcalcSize.y = (this._maxRows - iGridPos.row) + 1;\r\n\r\n\t\t\tcalcSize = this._resizingItem.fixResize(calcSize);\r\n\r\n\t\t\tif (calcSize.x != itemSize.x || calcSize.y != itemSize.y) {\r\n\t\t\t\tthis._resizingItem.setSize(calcSize, false);\r\n\t\t\t\tthis._placeholderRef.instance.setSize(calcSize);\r\n\r\n\t\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\t\tthis._fixGridCollisions(iGridPos, calcSize, true);\r\n\t\t\t\t\tthis._cascadeGrid(iGridPos, calcSize);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._fixToGrid)\r\n\t\t\t\tthis._resizingItem.setDimensions(newW, newH);\r\n\r\n\t\t\tvar bigGrid = this._maxGridSize(itemPos.left + newW + (2 * e.movementX), itemPos.top + newH + (2 * e.movementY));\r\n\r\n\t\t\tif (this._resizeDirection == 'height') bigGrid.x = iGridPos.col + itemSize.x;\r\n\t\t\tif (this._resizeDirection == 'width') bigGrid.y = iGridPos.row + itemSize.y;\r\n\r\n\t\t\tthis.onResize.emit(this._resizingItem);\r\n\t\t\tthis._resizingItem.onResizeEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragStop(e: any): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis.isDragging = false;\r\n\r\n\t\t\tvar itemPos = this._draggingItem.getGridPosition();\r\n\r\n\t\t\tthis._draggingItem.savePosition(itemPos);\r\n\t\t\tthis._addToGrid(this._draggingItem);\r\n\r\n\t\t\tthis._cascadeGrid();\r\n\r\n\t\t\tthis._draggingItem.stopMoving();\r\n\t\t\tthis._draggingItem.onDragStopEvent();\r\n\t\t\tthis.onDragStop.emit(this._draggingItem);\r\n\t\t\tthis._draggingItem = null;\r\n\t\t\tthis._posOffset = null;\r\n\t\t\tthis._placeholderRef.destroy();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\r\n\t\t\tif (this._zoomOnDrag) {\r\n\t\t\t\tthis._resetZoom();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resizeStop(e: any): void {\r\n\t\tif (this.isResizing) {\r\n\t\t\tthis.isResizing = false;\r\n\r\n\t\t\tvar itemDims = this._resizingItem.getSize();\r\n\r\n\t\t\tthis._resizingItem.setSize(itemDims);\r\n\t\t\tthis._addToGrid(this._resizingItem);\r\n\r\n\t\t\tthis._cascadeGrid();\r\n\r\n\t\t\tthis._resizingItem.stopMoving();\r\n\t\t\tthis._resizingItem.onResizeStopEvent();\r\n\t\t\tthis.onResizeStop.emit(this._resizingItem);\r\n\t\t\tthis._resizingItem = null;\r\n\t\t\tthis._resizeDirection = null;\r\n\t\t\tthis._placeholderRef.destroy();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _maxGridSize(w: number, h: number): NgGridItemSize {\r\n\t\tvar sizex = Math.ceil(w / (this.colWidth + this.marginLeft + this.marginRight));\r\n\t\tvar sizey = Math.ceil(h / (this.rowHeight + this.marginTop + this.marginBottom));\r\n\t\treturn { 'x': sizex, 'y': sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridSize(width: number, height: number): NgGridItemSize {\r\n\t\twidth += this.marginLeft + this.marginRight;\r\n\t\theight += this.marginTop + this.marginBottom;\r\n\r\n\t\tvar sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\r\n\t\tvar sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\r\n\r\n\t\treturn { 'x': sizex, 'y': sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridPosition(left: number, top: number): NgGridItemPosition {\r\n\t\tvar col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\r\n\t\tvar row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: col, row: row }, { x: 1, y: 1 })) col = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: col, row: row }, { x: 1, y: 1 })) row = this._maxRows;\r\n\r\n\t\treturn { 'col': col, 'row': row };\r\n\t}\r\n\r\n\tprivate _hasGridCollision(pos: NgGridItemPosition, dims: NgGridItemSize): boolean {\r\n\t\tvar positions = this._getCollisions(pos, dims);\r\n\r\n\t\tif (positions == null || positions.length == 0) return false;\r\n\r\n\t\treturn positions.some((v: NgGridItem) => {\r\n\t\t\treturn !(v === null);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): Array<NgGridItem> {\r\n\t\tconst returns: Array<NgGridItem> = [];\r\n\r\n\t\tfor (let j: number = 0; j < dims.y; j++) {\r\n\t\t\tif (this._itemGrid[pos.row + j] != null) {\r\n\t\t\t\tfor (let i: number = 0; i < dims.x; i++) {\r\n\t\t\t\t\tif (this._itemGrid[pos.row + j][pos.col + i] != null) {\r\n\t\t\t\t\t\tconst item: NgGridItem = this._itemGrid[pos.row + j][pos.col + i];\r\n\r\n\t\t\t\t\t\tif (returns.indexOf(item) < 0)\r\n\t\t\t\t\t\t\treturns.push(item);\r\n\r\n\t\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\t\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\r\n\t\t\t\t\t\ti = itemPos.col + itemDims.x - pos.col;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tprivate _fixGridCollisions(pos: NgGridItemPosition, dims: NgGridItemSize, shouldSave: boolean = false): void {\r\n\t\twhile (this._hasGridCollision(pos, dims)) {\r\n\t\t\tconst collisions: Array<NgGridItem> = this._getCollisions(pos, dims);\r\n\r\n\t\t\tthis._removeFromGrid(collisions[0]);\r\n\r\n\t\t\tconst itemPos: NgGridItemPosition = collisions[0].getGridPosition();\r\n\t\t\tconst itemDims: NgGridItemSize = collisions[0].getSize();\r\n\r\n\t\t\tswitch (this.cascade) {\r\n\t\t\t\tcase 'up':\r\n\t\t\t\tcase 'down':\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconst oldRow: number = itemPos.row;\r\n\t\t\t\t\titemPos.row = pos.row + dims.y;\r\n\r\n\t\t\t\t\tif (!this._isWithinBoundsY(itemPos, itemDims)) {\r\n\t\t\t\t\t\titemPos.col = pos.col + dims.x;\r\n\t\t\t\t\t\titemPos.row = oldRow;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'left':\r\n\t\t\t\tcase 'right':\r\n\t\t\t\t\tconst oldCol: number = itemPos.col;\r\n\t\t\t\t\titemPos.col = pos.col + dims.x;\r\n\r\n\t\t\t\t\tif (!this._isWithinBoundsX(itemPos, itemDims)) {\r\n\t\t\t\t\t\titemPos.col = oldCol;\r\n\t\t\t\t\t\titemPos.row = pos.row + dims.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (shouldSave) {\r\n\t\t\t\tcollisions[0].savePosition(itemPos);\r\n\t\t\t} else {\r\n\t\t\t\tcollisions[0].setGridPosition(itemPos);\r\n\t\t\t}\r\n\r\n\t\t\tthis._fixGridCollisions(itemPos, itemDims, shouldSave);\r\n\t\t\tthis._addToGrid(collisions[0]);\r\n\t\t\tcollisions[0].onCascadeEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _limitGrid(maxCols: number): void {\r\n\t\tconst items: Array<NgGridItem> = this._items.slice();\r\n\r\n\t\titems.sort((a: NgGridItem, b: NgGridItem) => {\r\n\t\t\tlet aPos: NgGridItemPosition = a.getSavedPosition();\r\n\t\t\tlet bPos: NgGridItemPosition = b.getSavedPosition();\r\n\r\n\t\t\tif (aPos.row == bPos.row) {\r\n\t\t\t\treturn aPos.col == bPos.col ? 0 : (aPos.col < bPos.col ? -1 : 1);\r\n\t\t\t} else {\r\n\t\t\t\treturn aPos.row < bPos.row ? -1 : 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst columnMax: { [col: number]: number } = {};\r\n\t\tconst largestGap: { [col: number]: number } = {};\r\n\r\n\t\tfor (let i: number = 1; i <= maxCols; i++) {\r\n\t\t\tcolumnMax[i] = 1;\r\n\t\t\tlargestGap[i] = 1;\r\n\t\t}\r\n\r\n\t\tconst curPos: NgGridItemPosition = { col: 1, row: 1 };\r\n\t\tlet currentRow: number = 1;\r\n\r\n\t\tconst willCascade: (item: NgGridItem, col: number) => boolean = (item: NgGridItem, col: number) => {\r\n\t\t\tfor (let i: number = col; i < col + item.sizex; i++) {\r\n\t\t\t\tif (columnMax[i] == currentRow) return true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tinterface GridBlock {\r\n\t\t\tstart: number;\r\n\t\t\tend: number;\r\n\t\t\tlength: number;\r\n\t\t}\r\n\r\n\t\twhile (items.length > 0) {\r\n\t\t\tconst columns: Array<GridBlock> = [];\r\n\t\t\tlet newBlock: GridBlock = {\r\n\t\t\t\tstart: 1,\r\n\t\t\t\tend: 1,\r\n\t\t\t\tlength: 0,\r\n\t\t\t};\r\n\r\n\t\t\tfor (let col: number = 1; col <= maxCols; col++) {\r\n\t\t\t\tif (columnMax[col] <= currentRow) {\r\n\t\t\t\t\tif (newBlock.length == 0) {\r\n\t\t\t\t\t\tnewBlock.start = col;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewBlock.length++;\r\n\t\t\t\t\tnewBlock.end = col + 1;\r\n\t\t\t\t} else if (newBlock.length > 0) {\r\n\t\t\t\t\tcolumns.push(newBlock);\r\n\r\n\t\t\t\t\tnewBlock = {\r\n\t\t\t\t\t\tstart: col,\r\n\t\t\t\t\t\tend: col,\r\n\t\t\t\t\t\tlength: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (newBlock.length > 0) {\r\n\t\t\t\tcolumns.push(newBlock);\r\n\t\t\t}\r\n\r\n\t\t\tlet tempColumns: Array<number> = columns.map((block: GridBlock) => block.length);\r\n\t\t\tconst currentItems: Array<NgGridItem> = [];\r\n\r\n\t\t\twhile (items.length > 0) {\r\n\t\t\t\tconst item = items[0];\r\n\r\n\t\t\t\tif (item.row > currentRow) break;\r\n\r\n\t\t\t\tlet fits: boolean = false;\r\n\t\t\t\tfor (let x in tempColumns) {\r\n\t\t\t\t\tif (item.sizex <= tempColumns[x]) {\r\n\t\t\t\t\t\ttempColumns[x] -= item.sizex;\r\n\t\t\t\t\t\tfits = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if (item.sizex > tempColumns[x]) {\r\n\t\t\t\t\t\ttempColumns[x] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fits) {\r\n\t\t\t\t\tcurrentItems.push(items.shift());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (currentItems.length > 0) {\r\n\t\t\t\tconst itemPositions: Array<number> = [];\r\n\t\t\t\tlet lastPosition: number = maxCols;\r\n\r\n\t\t\t\tfor (let i = currentItems.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet maxPosition = 1;\r\n\r\n\t\t\t\t\tfor (let j = columns.length - 1; j >= 0; j--) {\r\n\t\t\t\t\t\tif (columns[j].start > lastPosition) continue;\r\n\t\t\t\t\t\tif (columns[j].start > (maxCols - currentItems[i].sizex)) continue;\r\n\t\t\t\t\t\tif (columns[j].length < currentItems[i].sizex) continue;\r\n\t\t\t\t\t\tif (lastPosition < columns[j].end && (lastPosition - columns[j].start) < currentItems[i].sizex) continue;\r\n\r\n\t\t\t\t\t\tmaxPosition = (lastPosition < columns[j].end ? lastPosition : columns[j].end) - currentItems[i].sizex\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titemPositions[i] = Math.min(maxPosition, currentItems[i].row == currentRow ? currentItems[i].col : 1);\r\n\t\t\t\t\tlastPosition = itemPositions[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minPosition: number = 1;\r\n\t\t\t\tlet currentItem: number = 0;\r\n\r\n\t\t\t\twhile (currentItems.length > 0) {\r\n\t\t\t\t\tconst item: NgGridItem = currentItems.shift();\r\n\r\n\t\t\t\t\tfor (let j = 0; j < columns.length; j++) {\r\n\t\t\t\t\t\tif (columns[j].length < item.sizex) continue;\r\n\t\t\t\t\t\tif (minPosition > columns[j].end) continue;\r\n\t\t\t\t\t\tif (minPosition > columns[j].start && (columns[j].end - minPosition) < item.sizex) continue;\r\n\t\t\t\t\t\tif (minPosition <  columns[j].start) minPosition = columns[j].start;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.setGridPosition({ col: Math.max(minPosition, itemPositions[currentItem]), row: currentRow });\r\n\r\n\t\t\t\t\tminPosition = item.currentCol + item.sizex;\r\n\t\t\t\t\tcurrentItem++;\r\n\r\n\t\t\t\t\tfor (let i: number = item.currentCol; i < item.currentCol + item.sizex; i++) {\r\n\t\t\t\t\t\tcolumnMax[i] = item.currentRow + item.sizey;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (currentItems.length === 0 && columns.length === 1 && columns[0].length >= maxCols) {\t//\tOnly one block, but no items fit. Means the next item is too large\r\n\t\t\t\tconst item: NgGridItem = items.shift();\r\n\r\n\t\t\t\titem.setGridPosition({ col: 1, row: currentRow });\r\n\r\n\t\t\t\tfor (let i: number = item.currentCol; i < item.currentCol + item.sizex; i++) {\r\n\t\t\t\t\tcolumnMax[i] = item.currentRow + item.sizey;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet newRow: number = 0;\r\n\r\n\t\t\tfor (let x in columnMax) {\r\n\t\t\t\tif (columnMax[x] > currentRow && (newRow == 0 || columnMax[x] < newRow)) {\r\n\t\t\t\t\tnewRow = columnMax[x];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcurrentRow = newRow <= currentRow ? currentRow + 1 : newRow;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _cascadeGrid(pos?: NgGridItemPosition, dims?: NgGridItemSize, shouldSave: boolean = true): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tif (pos && !dims) throw new Error('Cannot cascade with only position and not dimensions');\r\n\r\n\t\tif (this.isDragging && this._draggingItem && !pos && !dims) {\r\n\t\t\tpos = this._draggingItem.getGridPosition();\r\n\t\t\tdims = this._draggingItem.getSize();\r\n\t\t} else if (this.isResizing && this._resizingItem && !pos && !dims) {\r\n\t\t\tpos = this._resizingItem.getGridPosition();\r\n\t\t\tdims = this._resizingItem.getSize();\r\n\t\t}\r\n\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'down':\r\n\t\t\t\tconst lowRow: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i: number = 1; i <= this._curMaxCol; i++)\r\n\t\t\t\t\tlowRow[i] = 1;\r\n\r\n\t\t\t\tfor (let r: number = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] == undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c: number = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] == undefined) break;\r\n\t\t\t\t\t\tif (r < lowRow[c]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgGridItem = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tif (item.isFixed) continue;\r\n\r\n\t\t\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col != c || itemPos.row != r) continue;\t//\tIf this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowRow[c];\r\n\r\n\t\t\t\t\t\t\tfor (let i: number = 1; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowRow[(c + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (c + itemDims.x) > pos.col && c < (pos.col + dims.x)) {          //\tIf our element is in one of the item's columns\r\n\t\t\t\t\t\t\t\tif ((r >= pos.row && r < (pos.row + dims.y)) ||                         //\tIf this row is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.y > (pos.row - lowest)) &&                               //\tOr the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(r >= (pos.row + dims.y) && lowest < (pos.row + dims.y)))) {    //\t\tAnd this row is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.max(lowest, pos.row + dims.y);                        //\tSet the lowest row to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: NgGridItemPosition = { col: c, row: lowest };\r\n\r\n\t\t\t\t\t\t\tif (lowest != itemPos.row && this._isWithinBoundsY(newPos, itemDims)) {\t//\tIf the item is not already on this row move it up\r\n\t\t\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\t\t\tif (shouldSave) {\r\n\t\t\t\t\t\t\t\t\titem.savePosition(newPos);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowRow[c + i] = lowest + itemDims.y;\t//\tUpdate the lowest row to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\tcase 'right':\r\n\t\t\t\tconst lowCol: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i: number = 1; i <= this._curMaxRow; i++)\r\n\t\t\t\t\tlowCol[i] = 1;\r\n\r\n\t\t\t\tfor (let r: number = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] == undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c: number = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] == undefined) break;\r\n\t\t\t\t\t\tif (c < lowCol[r]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgGridItem = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col != c || itemPos.row != r) continue;\t//\tIf this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowCol[r];\r\n\r\n\t\t\t\t\t\t\tfor (let i: number = 1; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowCol[(r + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (r + itemDims.y) > pos.row && r < (pos.row + dims.y)) {          //\tIf our element is in one of the item's rows\r\n\t\t\t\t\t\t\t\tif ((c >= pos.col && c < (pos.col + dims.x)) ||                         //\tIf this col is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.x > (pos.col - lowest)) &&                               //\tOr the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(c >= (pos.col + dims.x) && lowest < (pos.col + dims.x)))) {    //\t\tAnd this col is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.max(lowest, pos.col + dims.x);                        //\tSet the lowest col to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: NgGridItemPosition = { col: lowest, row: r };\r\n\r\n\t\t\t\t\t\t\tif (lowest != itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t//\tIf the item is not already on this col move it up\r\n\t\t\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\t\t\tif (shouldSave) {\r\n\t\t\t\t\t\t\t\t\titem.savePosition(newPos);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowCol[r + i] = lowest + itemDims.x;\t//\tUpdate the lowest col to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fixGridPosition(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\twhile (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims)) {\r\n\t\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase 'up':\r\n\t\t\t\t\tcase 'down':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tpos.row++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\tpos.col++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\t\tpos.col++;\r\n\t\t\t\tpos.row = 1;\r\n\t\t\t}\r\n\t\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\t\tpos.row++;\r\n\t\t\t\tpos.col = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize) {\r\n\t\treturn (this._maxCols == 0 || (pos.col + dims.x - 1) <= this._maxCols);\r\n\t}\r\n\tprivate _isWithinBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize) {\r\n\t\treturn (this._maxRows == 0 || (pos.row + dims.y - 1) <= this._maxRows);\r\n\t}\r\n\tprivate _isWithinBounds(pos: NgGridItemPosition, dims: NgGridItemSize) {\r\n\t\treturn this._isWithinBoundsX(pos, dims) && this._isWithinBoundsY(pos, dims);\r\n\t}\r\n\r\n\tprivate _addToGrid(item: NgGridItem): void {\r\n\t\tlet pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\tthis._fixGridCollisions(pos, dims);\r\n\t\t\tpos = item.getGridPosition();\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < dims.y; j++) {\r\n\t\t\tif (this._itemGrid[pos.row + j] == null) this._itemGrid[pos.row + j] = {};\r\n\r\n\t\t\tfor (let i: number = 0; i < dims.x; i++) {\r\n\t\t\t\tthis._itemGrid[pos.row + j][pos.col + i] = item;\r\n\r\n\t\t\t\tthis._updateSize(pos.col + dims.x - 1, pos.row + dims.y - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _removeFromGrid(item: NgGridItem): void {\r\n\t\tfor (let y in this._itemGrid)\r\n\t\t\tfor (let x in this._itemGrid[y])\r\n\t\t\t\tif (this._itemGrid[y][x] == item)\r\n\t\t\t\t\tdelete this._itemGrid[y][x];\r\n\t}\r\n\r\n\tprivate _updateSize(col?: number, row?: number): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tcol = (col == undefined) ? this._getMaxCol() : col;\r\n\t\trow = (row == undefined) ? this._getMaxRow() : row;\r\n\r\n\t\tlet maxCol: number = Math.max(this._curMaxCol, col);\r\n\t\tlet maxRow: number = Math.max(this._curMaxRow, row);\r\n\r\n\t\tif (maxCol != this._curMaxCol || maxRow != this._curMaxRow) {\r\n\t\t\tthis._curMaxCol = maxCol;\r\n\t\t\tthis._curMaxRow = maxRow;\r\n\t\t}\r\n\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'width', '100%');//(maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'height', (this._getMaxRow() * (this.rowHeight + this.marginTop + this.marginBottom)) + 'px');\r\n\t}\r\n\r\n\tprivate _getMaxRow(): number {\r\n\t\treturn Math.max.apply(null, this._items.map((item: NgGridItem) => item.getGridPosition().row + item.getSize().y - 1));\r\n\t}\r\n\r\n\tprivate _getMaxCol(): number {\r\n\t\treturn Math.max.apply(null, this._items.map((item: NgGridItem) => item.getGridPosition().col + item.getSize().x - 1));\r\n\t}\r\n\r\n\tprivate _getMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\tconst refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\r\n\r\n\t\tlet left: number = e.clientX - refPos.left;\r\n\t\tlet top: number = e.clientY - refPos.top;\r\n\r\n\t\tif (this.cascade == 'down') top = refPos.top + refPos.height - e.clientY;\r\n\t\tif (this.cascade == 'right') left = refPos.left + refPos.width - e.clientX;\r\n\r\n\t\tif (this.isDragging && this._zoomOnDrag) {\r\n\t\t\tleft *= 2;\r\n\t\t\ttop *= 2;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: left,\r\n\t\t\ttop: top\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getAbsoluteMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: e.clientX,\r\n\t\t\ttop: e.clientY\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getContainerColumns(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\treturn Math.floor(maxWidth / (this.colWidth + this.marginLeft + this.marginRight));\r\n\t}\r\n\r\n\tprivate _getItemFromPosition(position: NgGridRawPosition): NgGridItem {\r\n\t\tfor (let item of this._items) {\r\n\t\t\tconst size: NgGridItemDimensions = item.getDimensions();\r\n\t\t\tconst pos: NgGridRawPosition = item.getPosition();\r\n\r\n\t\t\tif (position.left > (pos.left + this.marginLeft) && position.left < (pos.left + this.marginLeft + size.width) &&\r\n\t\t\t\tposition.top > (pos.top + this.marginTop) && position.top < (pos.top + this.marginTop + size.height)) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate _createPlaceholder(item: NgGridItem): void {\r\n\t\tconst pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(NgGridPlaceholder);\r\n        var componentRef: ComponentRef<NgGridPlaceholder> = item.containerRef.createComponent(factory);\r\n        this._placeholderRef = componentRef;\r\n        const placeholder: NgGridPlaceholder = componentRef.instance;\r\n        placeholder.registerGrid(this);\r\n        placeholder.setCascadeMode(this.cascade);\r\n        placeholder.setGridPosition({ col: pos.col, row: pos.row });\r\n        placeholder.setSize({ x: dims.x, y: dims.y });\r\n\t}\r\n\r\n\tprivate _emitOnItemChange() {\r\n\t\tthis.onItemChange.emit(this._items.map((item: NgGridItem) => item.getEventOutput()));\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n\tselector: '[ngGrid]',\r\n\tinputs: ['config: ngGrid'],\r\n\thost: {\r\n\t\t'(mousedown)': 'mouseDownEventHandler($event)',\r\n\t\t'(mousemove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(mouseup)': 'mouseUpEventHandler($event)',\r\n\t\t'(touchstart)': 'mouseDownEventHandler($event)',\r\n\t\t'(touchmove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(touchend)': 'mouseUpEventHandler($event)',\r\n\t\t'(window:resize)': 'resizeEventHandler($event)',\r\n\t\t'(document:mousemove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(document:mouseup)': 'mouseUpEventHandler($event)'\r\n\t},\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onDragStart': [{ type: Output },],\n'onDrag': [{ type: Output },],\n'onDragStop': [{ type: Output },],\n'onResizeStart': [{ type: Output },],\n'onResize': [{ type: Output },],\n'onResizeStop': [{ type: Output },],\n'onItemChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}